@implements IDisposable
@inject BotService Bot
@inject IDialogService DialogService
@inject IHostApplicationLifetime ApplicationLifetime
@page "/settings/general"
@using BanchoMultiplayerBot
@using BanchoMultiplayerBot.Config
@using BanchoMultiplayerBot.Data
@using BanchoMultiplayerBot.Host.Web.Pages.Dialogs;

<PageTitle>Settings</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">Settings</MudText>

<MudForm @ref="_form">
    <MudGrid>
        <MudItem xs="6">
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">General</MudText>
                <MudSwitch @bind-Checked="_configuration.AutoStartAllPlayersReady" Label="Auto-start when all players are ready" Color="Color.Primary"/>
                <MudSwitch @bind-Checked="_configuration.EnableAutoStartTimer" Label="Automatically start auto-start timer" Color="Color.Primary"/>
                <MudNumericField @bind-Value="_configuration.AutoStartTimerTime" Label="Auto-start timer (s)" Variant="Variant.Filled" Min="10" Max="600"/>
                <MudTextField @bind-Value="_configuration.StatisticsUrl" T="string" Label="Statistics Url" Variant="Variant.Filled"/>
            </MudPaper>
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">Other</MudText>
                <MudText Typo="Typo.body2" GutterBottom="true" Class="mt-2">Bot Version: @BanchoMultiplayerBot.Bot.Version</MudText>
                <MudButton Color="Color.Error" Variant="Variant.Outlined" @onclick="TerminateApplication">Exit without saving</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Class="pa-8 ma-2">
                <MudText Typo="Typo.h6" GutterBottom="true">Webhook Notifications</MudText>
                <MudSwitch @bind-Checked="_configuration.EnableWebhookNotifications" Label="Enable" Color="Color.Primary"/>
                <MudTextField @bind-Value="_configuration.WebhookUrl" T="string" Label="Webhook URL" Variant="Variant.Filled"/>
                <MudSwitch @bind-Checked="_configuration.WebhookNotifyConnectionErrors" Label="Notify on osu!bancho connection issues" Color="Color.Primary"/>
                <MudSwitch @bind-Checked="_configuration.WebhookNotifyLobbyTerminations" Label="Notify when managed lobbies gets removed" Color="Color.Primary"/>
                <MudText Typo="Typo.h6" GutterBottom="true">Webhook Message Notifications</MudText>
                <MudSwitch @bind-Checked="_configuration.WebhookNotifyUserMessage" Label="Notify on user direct messages" Color="Color.Primary" />
                <MudTooltip Text="Tries to find messages sent in lobbies where either 'bot' or your osu! username is mentioned">
                    <MudSwitch @bind-Checked="_configuration.WebhookNotifyBotMention" Label="Notify on bot mention messages" Color="Color.Primary" />
                </MudTooltip>
                <MudTooltip Text="Logs all messages to the discord webhook sent by others">
                    <MudSwitch @bind-Checked="_configuration.WebhookAllMessages" Label="Notify on user messages" Color="Color.Primary" />
                </MudTooltip>
                <MudSwitch @bind-Checked="_configuration.WebhookMentionSeperateWebhook" Label="Use seperate webhook for message notifications" Color="Color.Primary" />
                <MudTextField @bind-Value="_configuration.WebhookSeperateUrl" T="string" Label="Webhook URL" Variant="Variant.Filled" />
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudForm>

@code {
    private MudForm? _form;
    private BotConfiguration _configuration = null!;

    protected override void OnInitialized()
    {
        _configuration = Bot.Configuration;
    }

    private async void TerminateApplication()
    {
        var parameters = new DialogParameters { ["Message"] = "Are you sure you want to exit the bot?" };

        var dialog = DialogService.Show<ConfirmDialog>("ConfirmDialog", parameters);
        var result = await dialog.Result;

        if (result.Cancelled)
            return;

        ApplicationLifetime.StopApplication();
    }

    public void Dispose()
    {
    }

}